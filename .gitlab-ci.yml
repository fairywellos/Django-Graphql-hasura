image: docker:latest

services:
  - docker:dind
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
stages:
  - build_image
  - deploy

before_script:
   - docker info
   - 'which ssh-agent || ( apk update && apk add openssh-client)'
   - eval $(ssh-agent -s)
   - apk add curl
   - apk add py-pip
   - apk add python-dev libffi-dev openssl-dev gcc libc-dev make
    #Create .ssh directory
   - mkdir -p ~/.ssh
    #Save the SSH private key
#   - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - SSH_PRIVATE_KEY=$(cat $SSH_PRIVATE_KEY | base64 -w0)
   - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
   - chmod 700 ~/.ssh
   - chmod 600 ~/.ssh/id_rsa
   - eval "$(ssh-agent -s)"
   - ssh-keyscan -H 'gitlab.com' >> ~/.ssh/known_hosts
   - pip install docker-compose
   - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com

build_image:
  stage: build_image
  script:
    - docker network create tickethub_net
    # - docker-compose build -t registry.gitlab.com/sejuba1/django-saas-backoffice .
    # - docker-compose push registry.gitlab.com/sejuba1/django-saas-backoffice
    - docker build -t $CI_REGISTRY/sejuba1/django-saas-backoffice/image:latest .
    - docker push $CI_REGISTRY/sejuba1/django-saas-backoffice/image:latest

    # - docker-compose pull $CI_REGISTRY_IMAGE:latest || true
    # - docker-compose build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    # - docker-compose push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    # - docker-compose push $CI_REGISTRY_IMAGE:latest

# image: $CI_REGISTRY/sejuba1/django-saas-backoffice/image:latest
Deploy:
 stage: deploy
#  only:
#     - 'master'

 script:
    - ssh $ORGHUB_TEST_USER@$ORGHUB_TEST_SERVER
    - pwd
    - rm -f ~/.ssh/id_rsa
    - 'echo Deploy done: $(date “+%F %H:%M:%S”)'
    
        